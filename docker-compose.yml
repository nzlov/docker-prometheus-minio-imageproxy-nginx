version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-02-07T08-17-33Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
    MINIO_PROMETHEUS_AUTH_TYPE: public
    MINIO_PROMETHEUS_URL: http://prometheus:9090
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  prometheus:
    image: prom/prometheus
    volumes:
    - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "7002:9090"

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "7001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  imageproxy: 
    image: willnorris/imageproxy
    command: -baseURL http://nginx:9000/ -addr 0.0.0.0:8080 -cache memory -cache "s3://jincai/cache?endpoint=nginx:9000&disableSSL=1&s3ForcePathStyle=1"
    environment:
    - "AWS_ACCESS_KEY_ID=QA89SME74AJLZ8TT00AM"
    - "AWS_SECRET_KEY=+XeoIkm4ZD2lEQ1h75b7tc0G9MiMl8Bsg6ptfVPY"
    ports: 
    - "7000:8080"

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
